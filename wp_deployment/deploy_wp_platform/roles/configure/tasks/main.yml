---

- name: CONFIGURE | Adding configuration files
  # copy FROM ansible controller to target machine (fetch is the opposite)
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    #mode: 0644
    backup: yes
  # more complex iteration: each item now has src: and dest: attributes
  with_items:
    - src: "global_nginx"
      dest: "/etc/nginx/nginx.conf"
    - src: "global_php-fpm.conf"
      dest: "/etc/php/7.2/fpm/php-fpm.conf"
    - src: "php.ini"
      dest: "/etc/php/7.2/fpm/php.ini"

- name: CONFIGURE | Creating required directories
  file: path={{ item }}  state=directory
  with_items:
    - /usr/share/nginx/cache/fcgi
    - /var/run/php-fpm
    - /etc/php/7.2/fpm/pool.d

- name: CONFIGURE | Testing nginx.conf 
  raw: nginx -t
  
- name: CONFIGURE | Removing default pool
  file: path=/etc/php/7.2/fpm/pool.d/www.conf state=absent

- name: CONFIGURE | Removing default Nginx vhost configuration
  file: path=/etc/nginx/sites-enabled/default state=absent

- name: CONFIGURE | Set MySQL root password before installing
  debconf: name='mysql-server' question='mysql-server/root_password' value='{{mysql_root_pass }}' vtype='password'

- name: CONFIGURE | Confirm MySQL root password before installing
  debconf: name='mysql-server' question='mysql-server/root_password_again' value='{{mysql_root_pass }}' vtype='password'

- name: CONFIGURE | Deletes anonymous MySQL server user for localhost
  mysql_user: user="" state="absent" login_password="{{ mysql_root_pass }}" login_user=root

- name: CONFIGURE | Secures the MySQL root user
  mysql_user: user="root" password="{{ mysql_root_pass }}" host="{{ item }}" login_password="{{mysql_root_pass}}" login_user=root
  with_items:
    - 127.0.0.1
    - localhost
    - ::1
    - "{{ ansible_fqdn }}"

- name: CONFIGURE | Removing the MySQL test database
  mysql_db: db=test state=absent login_password="{{ mysql_root_pass }}" login_user=root 

- name: CONFIGURE | Restarting MySQL
  systemd: name=mysql state=restarted
